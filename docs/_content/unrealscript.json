{
	// https://code.visualstudio.com/docs/editor/userdefinedsnippets
	"Print to console": {
		"prefix": "log",
		"body": [
			"log(\"${TM_SELECTED_TEXT:${1:text}}\");",
			"$0"
		],
		"description": "Log output to console"
	},
	"For loop": {
		"prefix": "for",
		"body": [
			"for (i = 0; i < ${TM_SELECTED_TEXT:${1:array}}.length; i++)",
			"{",
			"\t$0;",
			"}"
		],
		"description": "A For loop"
	},
	"While": {
		"prefix": "while",
		"body": [
			"while (${TM_SELECTED_TEXT:${1:variable}})",
			"{",
			"\t$0;",
			"}"
		],
		"description": "A While"
	},
	"Switch": {
		"prefix": "switch",
		"body": [
			"switch (${TM_SELECTED_TEXT:${1:variable}})",
			"{",
			"\tcase ${2:value}:",
			"\t \tbreak;",
			"\tdefault:",
			"\t\t$0",
			"}"
		],
		"description": "A switch-case"
	},
	"If": {
		"prefix": "if",
		"body": [
			"if (${TM_SELECTED_TEXT:${1:variable}})",
			"{",
			"\t$0;",
			"}"
		],
		"description": "if"
	},
	"elif": {
		"prefix": "elif",
		"body": [
			"if (${TM_SELECTED_TEXT:${1:variable}})",
			"{",
			"\t$2;",
			"}",
			"else if (${3:another variable})",
			"{",
			"\t$0;",
			"}"
		],
		"description": "if"
	},
	"func": {
		"prefix": "func",
		"body": [
			"${1|public,private,protected|} function ${2:type} ${3:MyCoolFunc}(${4:arguments})",
			"{",
			"\t$0;",
			"}",
		],
		"description": "A Function"
	},
	"func with comments": {
		"prefix": "func com",
		"body": [
			"// ${1:short description}",
			"// $5",
			"${2|public,private,protected|} function ${3:type} ${4:MyCoolFunc}(${5:arguments})",
			"{",
			"\t$0;",
			"}",
		],
		"description": "A Function"
	},
	"struct": {
		"prefix": "struct",
		"body": [
			"struct ${TM_SELECTED_TEXT:${1:name}}",
			"{",
			"\tvar $0;",
			"};",
		],
		"description": "A struct"
	},
	"enum": {
		"prefix": "enum",
		"body": [
			"enum ${TM_SELECTED_TEXT:${1:name}}",
			"{",
			"\tvar $0;",
			"};",
		],
		"description": "An enum"
	},
	"Default Properties": {
		"prefix": "defaultproperties",
		"body": [
			"defaultproperties",
			"{",
			"\t$0",
			"}",
		],
		"description": "A defaultproperties"
	},
	"Acedia Allocate": {
		"prefix": "acedia allocate",
		"body": [
			"${TM_SELECTED_TEXT:${1:variable}}(_.memory.Allocate(class'${TM_SELECTED_TEXT:${1:variable}}'));"
		],
		"description": "acedia allocate"
	},
}